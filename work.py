import pygame #needed for graphics
import random #needed to randomize pattern
import math #needed for collision function
import winsound #needed for BEEPS

pygame.init() #initializes Pygame
pygame.display.set_caption("simon!") #sets the window title
screen = pygame.display.set_mode((800, 800)) #creates game screeen
clock = pygame.time.Clock()

#game variables
xpos = 0
ypos = 0
mousePos = (xpos, ypos) #variable mousePos stores Two numbers in a Tuple
hasClicked = False #this will be used to grab user imput
pattern = [] #this holds the random pattern generated by the machine
playerPattern = [] #this will eventually hold the player pattern
playerTurn = True #keeps track of whos turn it is
pi = 3.1415
ded = False #if player clicks wrong pattern, this will reset everything

#collision check
def collision(xpos, ypos):
    #print(xpos, ypos)
    if math.sqrt((xpos - 400)**2+(ypos - 400)**2)>200: #slide 12
        #print("outside of ring")
        return -1
    elif xpos < 400 and ypos < 400:
        #print("over red button")
        pygame.draw.arc(screen, (255, 0, 0), (200, 200, 400, 400), pi/2, pi, 100)
        pygame.display.flip()
        winsound.Beep(440, 500)
        return 0
    elif xpos < 400 and ypos > 400:
        #print ("over green button")
        pygame.draw.arc(screen, (89, 255, 133), (200, 200, 400, 400), pi, (3 * pi/2), 100)#green
        pygame.display.flip()
        winsound.Beep(640, 500)
        return 1
    elif xpos > 400 and ypos > 400:
        #print ("over blue button")
        pygame.draw.arc(screen, (0, 68, 255), (200, 200, 400, 400), (3 * pi/2), 2*pi, 100)
        pygame.display.flip()
        winsound.Beep(240, 500)
        return 2
    elif xpos > 400 and ypos < 400:
        #print("over yellow button")
        pygame.draw.arc(screen, (242, 255, 0), (200, 200, 400, 400), 2*pi, pi/2, 100)#yellow
        pygame.display.flip()
        winsound.Beep(840, 500)
        return 3
    

# #draw everything first so things don;t appear one at a time
pygame.draw.arc(screen, (209, 59, 59), (200, 200, 400, 400), pi/2, pi, 100)#red
pygame.draw.arc(screen, (51, 176, 70), (200, 200, 400, 400), pi, (3 * pi/2), 100)#green
pygame.draw.arc(screen, (47, 66, 173), (200, 200, 400, 400), (3 * pi/2), 2*pi, 100)#blue
pygame.draw.arc(screen, (249, 255, 143), (200, 200, 400, 400), 2*pi, pi/2, 100)#yellow
pygame.display.flip()

#empty list for player input
playerPattern = []

#GAME LOOP#########
while ded == False:

    clock.tick(60)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    #input section---------------
    if event.type == pygame.QUIT: #close game window
        break

    if event.type == pygame.MOUSEBUTTONDOWN:
        hasClicked = True
        # playerTurn = True
        print("click")
    
    if event.type == pygame.MOUSEBUTTONUP:
        hasClicked = False

    if event.type == pygame.MOUSEMOTION:
        mousePos = event.pos
    #xpos , ypos = mousePos
    
#players turn=====================================================
    #playerPattern.append(collision(mousePos[0], mousePos[1]))
    #print(playerPattern)
    if playerTurn == True:
        print("starting players turn")
        if len(playerPattern) < len(pattern):
            if hasClicked == True:
                playerPattern.append(collision(mousePos[0], mousePos[1]))
                hasClicked = False
            for i in range(len(playerPattern)):
                if playerPattern[i] != pattern[i]:
                    ded = True
                    print("ded is true")
                
        else:
            playerTurn = False
            pygame.time.wait(800)

    #update section-----------------
    #(xpos, ypos)
#machine turn=========================================================================
    if playerTurn == False: #add this
        print("starting machine turn")
        pattern.append(random.randrange(0,4)) #push a new value into the pattern test
        #play computer pattern
        for i in range(len(pattern)):
            if pattern[i] == 0: #red
                #breifly draw brighter color
                pygame.draw.arc(screen, (255, 0, 0), (200, 200, 400, 400), pi/2,pi, 100)
                pygame.display.flip()
                winsound.Beep(440, 500) #each button has a diffrent pitch sound
        #for i in range(len(pattern)):
            if pattern[i] == 1: #GREEN
                #briefly draw brighter color
                pygame.draw.arc(screen, (0, 255, 60), (200, 200, 400, 400), pi, (3* pi / 2), 100)
                pygame.display.flip()
                winsound.Beep(640, 500)
        #for i in range(len(pattern)):
            if pattern[i] == 2: #Blue
                pygame.draw.arc(screen, (0, 38, 255), (200, 200, 400, 400), (3 * pi/2), 2*pi, 100)#blue
                pygame.display.flip()
                winsound.Beep(840, 500)
        #for i in range(len(pattern)):
            if pattern[i] == 3: #yellow
                pygame.draw.arc(screen, (241, 255, 0), (200, 200, 400, 400), 2*pi, pi/2, 100)#yellow
                pygame.display.flip()
                winsound.Beep(240, 500)
               
        pygame.draw.arc(screen, (155,0,0), (200, 200, 400, 400), pi / 2, pi, 100) #red
        pygame.draw.arc(screen, (0,155,0), (200, 200, 400, 400), pi, (3 * pi / 2), 100) #green
        pygame.draw.arc(screen, (0,0,155), (200, 200, 400, 400), (3*pi / 2), pi / 1000, 100) #blue
        pygame.draw.arc(screen, (155,155,0), (200,200,400,400), pi / 1000, pi / 2, 100) #yellow
        pygame.time.wait(800)
        playerTurn = True #so the player has to start the pattern over again each time
        playerPattern.clear() #so the player has to start the pattern over again each time
    
    #render section-----------------
    pygame.draw.arc(screen, (209, 59, 59), (200, 200, 400, 400), pi/2, pi, 100)#red
    pygame.draw.arc(screen, (37, 148, 63), (200, 200, 400, 400), pi, (3 * pi/2), 100)#green
    pygame.draw.arc(screen, (47, 66, 173), (200, 200, 400, 400), (3 * pi/2), 2*pi, 100)#blue
    pygame.draw.arc(screen, (249, 255, 143), (200, 200, 400, 400), 2*pi, pi/2, 100)#yellow
    pygame.display.flip()
    #game board
#end game loop#############################
if ded == True:
    print("GAME OVER")
pygame.quit()

